using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'acmTeam' function below.
     *
     * The function is expected to return an INTEGER_ARRAY.
     * The function accepts STRING_ARRAY topic as parameter.
     */

    public static List<int> acmTeam(List<string> topic)
    {
        var listOf = new List<int>();

            for (int i = 0; i < topic.Count - 1; i++)
            {
                for (int j = i + 1; j < topic.Count; j++)
                {
                    var result = OrString(topic[i], topic[j]);
                    listOf.Add(result);
                }
            }

            var maxElement = listOf.Max();
            var maxElementCount = listOf.Count(_ => _ == maxElement);

            listOf.Clear();

            listOf.Add(maxElement);
            listOf.Add(maxElementCount);

            return listOf.ToList();
        }
        
         private static int OrString(string firstStr, string secondStr)
        {
            int result = 0;

            for (int i = 0; i < firstStr.Length; i++)
                if (!(firstStr[i] == '0' && secondStr[i] == '0'))
                    result++;

            return result;
        }

    

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string[] firstMultipleInput = Console.ReadLine().TrimEnd().Split(' ');

        int n = Convert.ToInt32(firstMultipleInput[0]);

        int m = Convert.ToInt32(firstMultipleInput[1]);

        List<string> topic = new List<string>();

        for (int i = 0; i < n; i++)
        {
            string topicItem = Console.ReadLine();
            topic.Add(topicItem);
        }

        List<int> result = Result.acmTeam(topic);

        textWriter.WriteLine(String.Join("\n", result));

        textWriter.Flush();
        textWriter.Close();
    }
}
